"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addContentToCustom = void 0;
var answers_1 = require("./answers");
var dev_mode_1 = require("./dev-mode");
var cache_1 = require("./helpers/cache");
var constants_1 = require("./helpers/constants");
var extensions_1 = require("./helpers/extensions");
var loaders_1 = require("./helpers/loaders");
var plugins_1 = require("./helpers/plugins");
var webpack_set_content_1 = require("./webpack-set.content");
function addContentToCustom(presetType, mode, options) {
    return "\n".concat((0, constants_1.generateConstants)(presetType, options.devMode), "\nmodule.exports = {\n  context: path.resolve(__dirname, \"").concat(options.context, "\"),\n  mode: \"").concat(options.devMode, "\",\n  entry: ").concat((0, webpack_set_content_1.setEntryPoint)(options.entryPoint), ",\n  devtool: \"").concat((0, webpack_set_content_1.setSourceMaps)(options.devMode), "\",\n  module: {\n    rules: [\n      ").concat((0, loaders_1.langLoader)(presetType), "\n      ").concat((0, loaders_1.setCoffeeScript)(options.isCoffeScriptSupport), "\n      ").concat((0, loaders_1.setHtmlLoader)(options.htmlPreprocessor, presetType), "\n      ").concat((0, loaders_1.setCssPreprocessorLoader)(options.cssPreprocessors, mode, presetType), "\n      ").concat((0, loaders_1.setXmlLoader)(options.isXmlSupport), "\n      ").concat((0, loaders_1.setYamlLoader)(options.isYamlSupport), "\n      ").concat((0, loaders_1.setCsvLoader)(options.isCsvSupport), "\n      ").concat((0, loaders_1.setImageExtensions)(options.isImageSupport, options.imageExtensionsSupport, options.staticLoader), "\n      ").concat((0, loaders_1.setFontsExtensions)(options.fontsExtensionsSupport, options.staticLoader, options.fontsOutputDirectory), "\n    ]\n  },\n  cache: {\n    ").concat((0, cache_1.setCacheSupport)(), "\n  },\n  resolve: {\n    alias: {\n      ").concat((0, webpack_set_content_1.setAlias)(options.aliasPath), "\n    },\n    extensions: [\n      ").concat((0, extensions_1.setPackOfExtensions)(".ts .tsx .css .sass .scss .html .png .woff .ttf"), "\n    ]\n  },\n  plugins: [\n    ").concat((0, plugins_1.isHtmlWebpackPlugin)(presetType, options), "\n    ").concat((0, plugins_1.LinterChoose)(presetType, options), "\n    ").concat((0, plugins_1.setClosureLibrary)(options.isClosureSupport), "\n    ").concat((0, plugins_1.setEnvironmentPlugin)(options.isEnvironmentalVariablesSupport, options.environmentVariable), "\n    ").concat((0, plugins_1.setDLLPlugin)(options.isSplitBundlesThroughDLLSupport, options.dllOptions), "\n   \n    ").concat((0, plugins_1.setCleanWebpackPlugin)(options.isCleanPluginSUpport), "\n    ").concat((0, plugins_1.setI18nPlugin)(options.isLocalizeSupport), "\n    ").concat((0, plugins_1.setProfillingPlugin)(options.isCreateChromeProfileFileSupport), "\n    ").concat((0, plugins_1.setIgnorePlugin)(options.isIgnoreSomeFilesSupport), "\n    ").concat((0, plugins_1.setIntegrationWebpack)(options.integrationSupport), "\n    ").concat((0, plugins_1.setHMRPlugin)(options.isHMRSupport), "\n    ").concat((0, plugins_1.setCompressionPlugin)(options.isCompressionSupport, options.compressionOptions), "\n    ").concat((0, plugins_1.setCopyWebpackPlugin)(options.isCopyPluginSupport), "\n    ").concat((0, plugins_1.setWebpackNotifierPlugin)(mode), "\n  ],\n  optimization: {\n    minimizer: [\n      ").concat((0, dev_mode_1.optimizeProductionCSS)(options.devMode), "\n      ").concat((0, dev_mode_1.optimizeProductionHTML)(options.devMode), "\n      ").concat((0, dev_mode_1.setTerserPlugin)(options.devMode), "\n    ]\n  },\n  output: {\n    ").concat((0, answers_1.outputDir)(), "\n  }\n};\n  ");
}
exports.addContentToCustom = addContentToCustom;
//# sourceMappingURL=add-content-custom.js.map